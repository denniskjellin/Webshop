@model IEnumerable<backend.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<h1>@ViewData["Title"]</h1>
<div class="d-flex justify-content-between">
    <p>
        <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-lg"></i> Create New</a>
    </p>

    @* Creating a search form, using bootstrap classes for styling. *@
    <form asp-action="Search">
        <div class="input-group">
            <input type="text" name="searchString" placeholder="Search product.." class="form-control" />
            <div class="input-group-append">
                <input type="submit" class="btn btn-outline-secondary" value="Search"></input>
            </div>
        </div>
    </form>
</div>
<hr />
@* Creating a responsive table, so on smal screens you can swide to the side *@
<div class="table-responsive">
    @* Creating a table with "stripes" so each td get different color *@
   <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Price</th>
                <th>Highlighted</th>
                <th>Image</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>

            @* Controll, if product count from the search is 0, Return a message through the ViewBag *@
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                    <div class="alert alert-info">@ViewBag.Message</div>
            } 
            @* Loop through each item *@  
            @foreach (var item in Model)
            {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>@Html.DisplayFor(modelItem => item.Price)</td>
                            <td>@Html.DisplayFor(modelItem => item.IsHighlighted)</td>
                            <td>@Html.DisplayFor(modelItem => item.ImageName)</td>
                            <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>

                    @* 
                    Custom styling using bootstrap + icons, setting margins for the icons/btn on different screens.
                    *@
                            <td>
                                <a class="btn btn-secondary mt-1 mt-md-1 mt-lg-0" asp-action="Details" asp-route-id="@item.ProductId"><i class="bi bi-info-circle icon-margin"></i>Details</a>
                                <a class="btn btn-primary mt-1 mt-md-1 mt-lg-0" asp-action="Edit" asp-route-id="@item.ProductId"><i class="bi bi-info-circle icon-margin"></i>Edit</a>
                                <a class="btn btn-danger mt-1 mt-md-1 mt-lg-0" asp-action="Delete" asp-route-id="@item.ProductId"><i class="bi bi-trash icon-margin"></i>Delete</a>
                            </td>
                        </tr>
            }
        </tbody>
    </table>
</div>
